async function init(){
  const res = await fetch('games.json');
  const games = await res.json();
  const grid = document.getElementById('grid');
  const tpl = document.getElementById('card-tpl');

  function makeTag(text){
    const el = document.createElement('span'); el.className='tag'; el.textContent=text; return el;
  }

  function render(list){
    grid.innerHTML='';
    list.forEach(g=>{
      const node = tpl.content.cloneNode(true);
      node.querySelector('.thumb').src = g.thumb;
      node.querySelector('.thumb').alt = g.title;
      node.querySelector('.title').textContent = g.title;
      node.querySelector('.desc').textContent = g.desc;
      const tagsEl = node.querySelector('.tags');
      (g.tags||[]).forEach(t=>tagsEl.appendChild(makeTag(t)));

      const cta = node.querySelector('.cta');
      if(g.storeUrl){
        const a = document.createElement('a'); a.href=g.storeUrl; a.textContent='Bekijk in winkel'; a.target='_blank'; cta.appendChild(a);
      }
      if(g.downloadUrl){
        const d = document.createElement('a'); d.href=g.downloadUrl; d.textContent='Download'; d.target='_blank'; cta.appendChild(d);
      }
      grid.appendChild(node);
    });
  }

  document.getElementById('search').addEventListener('input', e=>{
    const q = e.target.value.toLowerCase();
    render(games.filter(g => (g.title+' '+g.desc+' '+(g.tags||[]).join(' ')).toLowerCase().includes(q)));
  });

  render(games);
}

init().catch(e=>console.error(e));
